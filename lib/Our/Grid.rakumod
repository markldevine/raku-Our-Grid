use Our::Grid::Row;
use Our::Grid::Column;
unit class Our::Grid:api<1>:auth<Mark Devine (mark@markdevine.com)> does Our::Grid::Row does Our::Grid::Column;

use Our::Grid::Cell;
use Our::Utilities;

#   ???????????????????????????????????????????????????????????????????
#   ?TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT?
#   ???????????????????????????????????????????????????????????????????
#   ?LLLL?pHHHHHp?pHHHHHp?pHHHHHp?pHHHHHp?pHHHHHp?pHHHHHp?pHHHHHp?RRRR?
#   ?LLLL?p-----p?p-----p?p-----p?p-----p?p-----p?p-----p?p-----p?RRRR?
#   ?LLLL?pAAAAAp?pBBBBBp?pCCCCCp?pDDDDDp?pEEEEEp?pFFFFFp?pGGGGGp?RRRR?
#   ?LLLL?pHHHHHp?pIIIIIp?pKKKKKp?pLLLLLp?pMMMMMp?pNNNNNp?pOOOOOp?RRRR?
#   ?LLLL?pPPPPPp?pQQQQQp?pWWWWWp?pXXXXXp?pYYYYYp?pZZZZZp?p     p?RRRR?
#   ???????????????????????????????????????????????????????????????????
#   fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

has                 $.header;
has                 $.footer;
has                 @.rows;
has                 $.term-size;
has                 $.anchor-row;
has                 $.anchor-col;

has                 $.cells         = Array.new();

submethod TWEAK {
    $!term-size = term-size;                                            # $term-size.rows $term-size.cols
}

method add-row (Our::Grid::Row:D $row!, *%options) {
    @!rows.push: self.row-fmt(:$row, |%options);
}

method build-grid {
}

# when outputting
#   - length of the widest cell in each column
#       - foreach column, what is the justification scheme
#           - left justified, pad to the end of the cell
#           - center justified, pad the cell beginning & end equally
#           - right justified, pad from the beginning of the cell

method TEXT-out {
    for @!rows -> $row {
        put $row.TEXT-fmt;
    }
}

method ANSI-out {
    for @!rows -> $row {
        put $row.ANSI-fmt;
    }
}

=finish
